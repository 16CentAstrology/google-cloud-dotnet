// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/logging/v2/logging.proto
#region Designer generated code

using System;
using System.Threading;
using System.Threading.Tasks;
using Grpc.Core;

namespace Google.Logging.V2 {
  public static class LoggingServiceV2
  {
    static readonly string __ServiceName = "google.logging.v2.LoggingServiceV2";

    static readonly Marshaller<global::Google.Logging.V2.DeleteLogRequest> __Marshaller_DeleteLogRequest = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Logging.V2.DeleteLogRequest.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_Empty = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Protobuf.WellKnownTypes.Empty.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Logging.V2.WriteLogEntriesRequest> __Marshaller_WriteLogEntriesRequest = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Logging.V2.WriteLogEntriesRequest.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Logging.V2.WriteLogEntriesResponse> __Marshaller_WriteLogEntriesResponse = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Logging.V2.WriteLogEntriesResponse.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Logging.V2.ListLogEntriesRequest> __Marshaller_ListLogEntriesRequest = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Logging.V2.ListLogEntriesRequest.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Logging.V2.ListLogEntriesResponse> __Marshaller_ListLogEntriesResponse = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Logging.V2.ListLogEntriesResponse.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Logging.V2.ListMonitoredResourceDescriptorsRequest> __Marshaller_ListMonitoredResourceDescriptorsRequest = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Logging.V2.ListMonitoredResourceDescriptorsRequest.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Logging.V2.ListMonitoredResourceDescriptorsResponse> __Marshaller_ListMonitoredResourceDescriptorsResponse = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Logging.V2.ListMonitoredResourceDescriptorsResponse.Parser.ParseFrom);

    static readonly Method<global::Google.Logging.V2.DeleteLogRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteLog = new Method<global::Google.Logging.V2.DeleteLogRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        MethodType.Unary,
        __ServiceName,
        "DeleteLog",
        __Marshaller_DeleteLogRequest,
        __Marshaller_Empty);

    static readonly Method<global::Google.Logging.V2.WriteLogEntriesRequest, global::Google.Logging.V2.WriteLogEntriesResponse> __Method_WriteLogEntries = new Method<global::Google.Logging.V2.WriteLogEntriesRequest, global::Google.Logging.V2.WriteLogEntriesResponse>(
        MethodType.Unary,
        __ServiceName,
        "WriteLogEntries",
        __Marshaller_WriteLogEntriesRequest,
        __Marshaller_WriteLogEntriesResponse);

    static readonly Method<global::Google.Logging.V2.ListLogEntriesRequest, global::Google.Logging.V2.ListLogEntriesResponse> __Method_ListLogEntries = new Method<global::Google.Logging.V2.ListLogEntriesRequest, global::Google.Logging.V2.ListLogEntriesResponse>(
        MethodType.Unary,
        __ServiceName,
        "ListLogEntries",
        __Marshaller_ListLogEntriesRequest,
        __Marshaller_ListLogEntriesResponse);

    static readonly Method<global::Google.Logging.V2.ListMonitoredResourceDescriptorsRequest, global::Google.Logging.V2.ListMonitoredResourceDescriptorsResponse> __Method_ListMonitoredResourceDescriptors = new Method<global::Google.Logging.V2.ListMonitoredResourceDescriptorsRequest, global::Google.Logging.V2.ListMonitoredResourceDescriptorsResponse>(
        MethodType.Unary,
        __ServiceName,
        "ListMonitoredResourceDescriptors",
        __Marshaller_ListMonitoredResourceDescriptorsRequest,
        __Marshaller_ListMonitoredResourceDescriptorsResponse);

    // service descriptor
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Google.Logging.V2.LoggingReflection.Descriptor.Services[0]; }
    }

    // client interface
    public interface ILoggingServiceV2Client
    {
      global::Google.Protobuf.WellKnownTypes.Empty DeleteLog(global::Google.Logging.V2.DeleteLogRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken));
      global::Google.Protobuf.WellKnownTypes.Empty DeleteLog(global::Google.Logging.V2.DeleteLogRequest request, CallOptions options);
      AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteLogAsync(global::Google.Logging.V2.DeleteLogRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken));
      AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteLogAsync(global::Google.Logging.V2.DeleteLogRequest request, CallOptions options);
      global::Google.Logging.V2.WriteLogEntriesResponse WriteLogEntries(global::Google.Logging.V2.WriteLogEntriesRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken));
      global::Google.Logging.V2.WriteLogEntriesResponse WriteLogEntries(global::Google.Logging.V2.WriteLogEntriesRequest request, CallOptions options);
      AsyncUnaryCall<global::Google.Logging.V2.WriteLogEntriesResponse> WriteLogEntriesAsync(global::Google.Logging.V2.WriteLogEntriesRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken));
      AsyncUnaryCall<global::Google.Logging.V2.WriteLogEntriesResponse> WriteLogEntriesAsync(global::Google.Logging.V2.WriteLogEntriesRequest request, CallOptions options);
      global::Google.Logging.V2.ListLogEntriesResponse ListLogEntries(global::Google.Logging.V2.ListLogEntriesRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken));
      global::Google.Logging.V2.ListLogEntriesResponse ListLogEntries(global::Google.Logging.V2.ListLogEntriesRequest request, CallOptions options);
      AsyncUnaryCall<global::Google.Logging.V2.ListLogEntriesResponse> ListLogEntriesAsync(global::Google.Logging.V2.ListLogEntriesRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken));
      AsyncUnaryCall<global::Google.Logging.V2.ListLogEntriesResponse> ListLogEntriesAsync(global::Google.Logging.V2.ListLogEntriesRequest request, CallOptions options);
      global::Google.Logging.V2.ListMonitoredResourceDescriptorsResponse ListMonitoredResourceDescriptors(global::Google.Logging.V2.ListMonitoredResourceDescriptorsRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken));
      global::Google.Logging.V2.ListMonitoredResourceDescriptorsResponse ListMonitoredResourceDescriptors(global::Google.Logging.V2.ListMonitoredResourceDescriptorsRequest request, CallOptions options);
      AsyncUnaryCall<global::Google.Logging.V2.ListMonitoredResourceDescriptorsResponse> ListMonitoredResourceDescriptorsAsync(global::Google.Logging.V2.ListMonitoredResourceDescriptorsRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken));
      AsyncUnaryCall<global::Google.Logging.V2.ListMonitoredResourceDescriptorsResponse> ListMonitoredResourceDescriptorsAsync(global::Google.Logging.V2.ListMonitoredResourceDescriptorsRequest request, CallOptions options);
    }

    // server-side interface
    public interface ILoggingServiceV2
    {
      Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteLog(global::Google.Logging.V2.DeleteLogRequest request, ServerCallContext context);
      Task<global::Google.Logging.V2.WriteLogEntriesResponse> WriteLogEntries(global::Google.Logging.V2.WriteLogEntriesRequest request, ServerCallContext context);
      Task<global::Google.Logging.V2.ListLogEntriesResponse> ListLogEntries(global::Google.Logging.V2.ListLogEntriesRequest request, ServerCallContext context);
      Task<global::Google.Logging.V2.ListMonitoredResourceDescriptorsResponse> ListMonitoredResourceDescriptors(global::Google.Logging.V2.ListMonitoredResourceDescriptorsRequest request, ServerCallContext context);
    }

    // client stub
    public class LoggingServiceV2Client : ClientBase, ILoggingServiceV2Client
    {
      public LoggingServiceV2Client(Channel channel) : base(channel)
      {
      }
      public global::Google.Protobuf.WellKnownTypes.Empty DeleteLog(global::Google.Logging.V2.DeleteLogRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        var call = CreateCall(__Method_DeleteLog, new CallOptions(headers, deadline, cancellationToken));
        return Calls.BlockingUnaryCall(call, request);
      }
      public global::Google.Protobuf.WellKnownTypes.Empty DeleteLog(global::Google.Logging.V2.DeleteLogRequest request, CallOptions options)
      {
        var call = CreateCall(__Method_DeleteLog, options);
        return Calls.BlockingUnaryCall(call, request);
      }
      public AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteLogAsync(global::Google.Logging.V2.DeleteLogRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        var call = CreateCall(__Method_DeleteLog, new CallOptions(headers, deadline, cancellationToken));
        return Calls.AsyncUnaryCall(call, request);
      }
      public AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteLogAsync(global::Google.Logging.V2.DeleteLogRequest request, CallOptions options)
      {
        var call = CreateCall(__Method_DeleteLog, options);
        return Calls.AsyncUnaryCall(call, request);
      }
      public global::Google.Logging.V2.WriteLogEntriesResponse WriteLogEntries(global::Google.Logging.V2.WriteLogEntriesRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        var call = CreateCall(__Method_WriteLogEntries, new CallOptions(headers, deadline, cancellationToken));
        return Calls.BlockingUnaryCall(call, request);
      }
      public global::Google.Logging.V2.WriteLogEntriesResponse WriteLogEntries(global::Google.Logging.V2.WriteLogEntriesRequest request, CallOptions options)
      {
        var call = CreateCall(__Method_WriteLogEntries, options);
        return Calls.BlockingUnaryCall(call, request);
      }
      public AsyncUnaryCall<global::Google.Logging.V2.WriteLogEntriesResponse> WriteLogEntriesAsync(global::Google.Logging.V2.WriteLogEntriesRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        var call = CreateCall(__Method_WriteLogEntries, new CallOptions(headers, deadline, cancellationToken));
        return Calls.AsyncUnaryCall(call, request);
      }
      public AsyncUnaryCall<global::Google.Logging.V2.WriteLogEntriesResponse> WriteLogEntriesAsync(global::Google.Logging.V2.WriteLogEntriesRequest request, CallOptions options)
      {
        var call = CreateCall(__Method_WriteLogEntries, options);
        return Calls.AsyncUnaryCall(call, request);
      }
      public global::Google.Logging.V2.ListLogEntriesResponse ListLogEntries(global::Google.Logging.V2.ListLogEntriesRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        var call = CreateCall(__Method_ListLogEntries, new CallOptions(headers, deadline, cancellationToken));
        return Calls.BlockingUnaryCall(call, request);
      }
      public global::Google.Logging.V2.ListLogEntriesResponse ListLogEntries(global::Google.Logging.V2.ListLogEntriesRequest request, CallOptions options)
      {
        var call = CreateCall(__Method_ListLogEntries, options);
        return Calls.BlockingUnaryCall(call, request);
      }
      public AsyncUnaryCall<global::Google.Logging.V2.ListLogEntriesResponse> ListLogEntriesAsync(global::Google.Logging.V2.ListLogEntriesRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        var call = CreateCall(__Method_ListLogEntries, new CallOptions(headers, deadline, cancellationToken));
        return Calls.AsyncUnaryCall(call, request);
      }
      public AsyncUnaryCall<global::Google.Logging.V2.ListLogEntriesResponse> ListLogEntriesAsync(global::Google.Logging.V2.ListLogEntriesRequest request, CallOptions options)
      {
        var call = CreateCall(__Method_ListLogEntries, options);
        return Calls.AsyncUnaryCall(call, request);
      }
      public global::Google.Logging.V2.ListMonitoredResourceDescriptorsResponse ListMonitoredResourceDescriptors(global::Google.Logging.V2.ListMonitoredResourceDescriptorsRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        var call = CreateCall(__Method_ListMonitoredResourceDescriptors, new CallOptions(headers, deadline, cancellationToken));
        return Calls.BlockingUnaryCall(call, request);
      }
      public global::Google.Logging.V2.ListMonitoredResourceDescriptorsResponse ListMonitoredResourceDescriptors(global::Google.Logging.V2.ListMonitoredResourceDescriptorsRequest request, CallOptions options)
      {
        var call = CreateCall(__Method_ListMonitoredResourceDescriptors, options);
        return Calls.BlockingUnaryCall(call, request);
      }
      public AsyncUnaryCall<global::Google.Logging.V2.ListMonitoredResourceDescriptorsResponse> ListMonitoredResourceDescriptorsAsync(global::Google.Logging.V2.ListMonitoredResourceDescriptorsRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        var call = CreateCall(__Method_ListMonitoredResourceDescriptors, new CallOptions(headers, deadline, cancellationToken));
        return Calls.AsyncUnaryCall(call, request);
      }
      public AsyncUnaryCall<global::Google.Logging.V2.ListMonitoredResourceDescriptorsResponse> ListMonitoredResourceDescriptorsAsync(global::Google.Logging.V2.ListMonitoredResourceDescriptorsRequest request, CallOptions options)
      {
        var call = CreateCall(__Method_ListMonitoredResourceDescriptors, options);
        return Calls.AsyncUnaryCall(call, request);
      }
    }

    // creates service definition that can be registered with a server
    public static ServerServiceDefinition BindService(ILoggingServiceV2 serviceImpl)
    {
      return ServerServiceDefinition.CreateBuilder(__ServiceName)
          .AddMethod(__Method_DeleteLog, serviceImpl.DeleteLog)
          .AddMethod(__Method_WriteLogEntries, serviceImpl.WriteLogEntries)
          .AddMethod(__Method_ListLogEntries, serviceImpl.ListLogEntries)
          .AddMethod(__Method_ListMonitoredResourceDescriptors, serviceImpl.ListMonitoredResourceDescriptors).Build();
    }

    // creates a new client
    public static LoggingServiceV2Client NewClient(Channel channel)
    {
      return new LoggingServiceV2Client(channel);
    }

  }
}
#endregion
